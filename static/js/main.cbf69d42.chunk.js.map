{"version":3,"sources":["actions/types.js","reducers/taskReducer.js","reducers/index.js","store.js","actions/taskActions.js","components/Task/AddTask.js","components/Task/TaskItem.js","components/Task/TaskList.js","components/Header/index.js","Containers/Tasks.js","App.js","index.js"],"names":["ADD_TASK","DELETE_TASK","EDIT_TASK","IS_SHOW_ADD_TASK","IS_DONE_TASK","initialState","taskList","id","title","date","description","isDone","isShowAddTask","combineReducers","tasks","state","action","type","payload","filter","task","map","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","addTask","data","dispatch","deleteTask","showAddTask","status","connect","useDispatch","lastID","useSelector","length","className","onSubmit","e","preventDefault","target","value","reset","htmlFor","name","cols","rows","style","marginRight","onClick","props","useState","isEditing","setIsEditing","doneStatus","find","newData","defaultValue","handleDelete","defaultChecked","onChange","isDoneTask","TaskList","list","padding","textAlign","width","Header","Tasks","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbf69d42.chunk.js","sourcesContent":["export const ADD_TASK = 'ADD_TASK';\r\nexport const DELETE_TASK = 'DELETE_TASK';\r\nexport const EDIT_TASK = 'EDIT_TASK';\r\nexport const IS_SHOW_ADD_TASK = 'IS_SHOW_ADD_TASK';\r\nexport const IS_DONE_TASK = 'IS_DONE_TASK';","import { ADD_TASK, DELETE_TASK, EDIT_TASK, IS_SHOW_ADD_TASK, IS_DONE_TASK } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    taskList: [{\r\n        id: 1,\r\n        title: 'Task 1',\r\n        date: '2020-01-01',\r\n        description: 'Task 1 description',\r\n        isDone: false\r\n    }],\r\n    isShowAddTask: false\r\n};\r\n\r\nexport default function taskReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_TASK:\r\n            return {\r\n                ...state,\r\n                taskList: [...state.taskList, action.payload],\r\n            };\r\n\r\n        case DELETE_TASK:\r\n            return {\r\n                ...state,\r\n                taskList: state.taskList.filter(task => task.id !== action.payload),\r\n            };\r\n\r\n        case EDIT_TASK:\r\n            return {\r\n                ...state,\r\n                taskList: state.taskList.map(task =>\r\n                    task.id === action.payload.id ? action.payload : task),\r\n            };\r\n\r\n        case IS_SHOW_ADD_TASK:\r\n            return {\r\n                ...state,\r\n                isShowAddTask: action.payload\r\n            };\r\n\r\n        case IS_DONE_TASK:\r\n            return {\r\n                ...state,\r\n                taskList: state.taskList.map(task =>\r\n                    task.id === action.payload ? {\r\n                        ...task,\r\n                        isDone: !task.isDone\r\n                    } : task),\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport taskReducer from './taskReducer';\r\n\r\nexport default combineReducers({\r\n    tasks: taskReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__\r\n            ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n            : f => f\r\n    )\r\n);\r\n\r\nexport default store;","import { ADD_TASK, DELETE_TASK, EDIT_TASK, IS_SHOW_ADD_TASK, IS_DONE_TASK } from \"./types\";\r\n\r\nexport const addTask = (data) => dispatch => {\r\n    dispatch({\r\n        type: ADD_TASK,\r\n        payload: data\r\n    });\r\n};\r\n\r\nexport const deleteTask = (id) => dispatch => {\r\n    dispatch({\r\n        type: DELETE_TASK,\r\n        payload: id\r\n    });\r\n};\r\n\r\nexport const editTask = (data) => dispatch => {\r\n    dispatch({\r\n        type: EDIT_TASK,\r\n        payload: data\r\n    });\r\n};\r\n\r\nexport const showAddTask = (status) => dispatch => {\r\n    dispatch({\r\n        type: IS_SHOW_ADD_TASK,\r\n        payload: status\r\n    });\r\n};\r\n\r\nexport const isDoneTask = (id) => dispatch => {\r\n    dispatch({\r\n        type: IS_DONE_TASK,\r\n        payload: id\r\n    });\r\n}","import { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { addTask, showAddTask } from \"../../actions/taskActions\";\r\n\r\nfunction AddTask() {\r\n    const dispatch = useDispatch();\r\n    const lastID =\r\n        useSelector(state => {\r\n            if (state.tasks.taskList.length > 0) {\r\n                return state.tasks.taskList[state.tasks.taskList.length - 1].id\r\n            }\r\n            return 0\r\n        });\r\n\r\n    const isShow = useSelector(state => state.tasks.isShowAddTask);\r\n\r\n    const handleSubmitTask = (e) => {\r\n        e.preventDefault();\r\n\r\n        const data = {\r\n            id: lastID + 1,\r\n            title: e.target.title.value,\r\n            date: e.target.date.value,\r\n            description: e.target.description.value,\r\n        }\r\n\r\n        if (data.title) {\r\n            dispatch(addTask(data));\r\n            dispatch(showAddTask(false));\r\n\r\n            e.target.reset();\r\n        }\r\n    }\r\n\r\n    return isShow ? (\r\n        <form className=\"tasks__add\" onSubmit={handleSubmitTask}>\r\n            <h3>Add new task</h3>\r\n            <label htmlFor=\"title\">Title:</label>\r\n            <input type=\"text\" name=\"title\" id=\"title\" />\r\n\r\n            <label htmlFor=\"date\">Date:</label>\r\n            <input type=\"date\" name=\"date\" id=\"date\" />\r\n\r\n            <label htmlFor=\"description\">Description:</label>\r\n            <textarea name=\"description\" id=\"description\" cols=\"30\" rows=\"3\"></textarea>\r\n\r\n            <div>\r\n                <button className=\"btn--success\" style={{ marginRight: '.5rem' }}>Save</button>\r\n                <button type=\"button\" onClick={() => dispatch(showAddTask(false))}>Cancel</button>\r\n            </div>\r\n        </form>\r\n    ) : ''\r\n}\r\n\r\nexport default connect(null, { addTask })(AddTask)","import { useState } from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteTask, editTask, isDoneTask } from \"../../actions/taskActions\";\r\n\r\nfunction TaskItem(props) {\r\n    const { id, title, date, description } = props.data;\r\n    const dispatch = useDispatch();\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const doneStatus = useSelector(state => state.tasks.taskList.find(task => task.id === id).isDone);\r\n\r\n    const handleDelete = (id) => {\r\n        dispatch(deleteTask(id))\r\n    }\r\n\r\n    const handleEditSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newData = {\r\n            id: id,\r\n            title: e.target.title.value,\r\n            date: e.target.date.value,\r\n            description: e.target.description.value\r\n        }\r\n\r\n        dispatch(editTask(newData))\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return <div className={\r\n        `tasks__item ${doneStatus ? 'tasks__item--done' : ''}`\r\n    }>\r\n        {\r\n            isEditing ?\r\n                <form onSubmit={handleEditSubmit}>\r\n                    <input type=\"text\" defaultValue={title} name=\"title\" />\r\n                    <input type=\"date\" defaultValue={date} name=\"date\" />\r\n                    <textarea defaultValue={description} name=\"description\" />\r\n\r\n                    <br />\r\n                    <br />\r\n\r\n                    <button className=\"btn--success\">Apply</button>\r\n                    <button type=\"button\" onClick={() => setIsEditing(false)}>Cancel</button>\r\n                </form>\r\n                :\r\n                <>\r\n                    <h2>{title}</h2>\r\n                    <h3>{date}</h3>\r\n                    <p>{description}</p>\r\n\r\n                    <footer>\r\n                        <button className=\"btn--danger\" onClick={() => handleDelete(id)}>Delete</button>\r\n                        <button className=\"btn--edit\" onClick={() => setIsEditing(true)}>Edit</button>\r\n                        <input type=\"checkbox\" defaultChecked={doneStatus} onChange={() => dispatch(isDoneTask(id))} />\r\n                    </footer>\r\n                </>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default connect(null, { deleteTask })(TaskItem);","import { useSelector } from \"react-redux\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nfunction TaskList() {\r\n    const list = useSelector(state => state.tasks.taskList) || [];\r\n\r\n    return (\r\n        <div className=\"tasks\">\r\n            {\r\n                list.length > 0 ?\r\n                    list.map(task => (\r\n                        <TaskItem key={task.id} className=\"tasks__item\" data={task} />\r\n                    ))\r\n                    : <p style={{\r\n                        padding: '3rem',\r\n                        textAlign: 'center',\r\n                        width: '100%'\r\n                    }}>No tasks yet</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskList;","import { useDispatch } from \"react-redux\";\r\nimport { showAddTask } from \"../../actions/taskActions\";\r\n\r\nexport default function Header() {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>React redux CRUD</h1>\r\n\r\n            <button\r\n                onClick={() => dispatch(showAddTask(true))}\r\n                className=\"btn--success\">+ Add Task</button>\r\n        </header>\r\n    )\r\n}","import AddTask from \"../components/Task/AddTask\";\r\nimport TaskList from \"../components/Task/TaskList\";\r\nimport Header from \"../components/Header\";\r\n\r\nexport default function Tasks() {\r\n    return (\r\n        <>\r\n            <Header />\r\n            <AddTask />\r\n            <TaskList />\r\n        </>\r\n    );\r\n}","import { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport Tasks from './Containers/Tasks';\r\nimport './main.scss'\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <Tasks />\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}